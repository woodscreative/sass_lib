/* !-- mixins.css | Media Queries ------------------------------ */

//---------------------------------------------------------
// Media Query Mixin
// Mobile first media queries.
// @param string $from break
// @param string $until break
// @dependancies grid()
// @example @include mq(mobile) {}
// @example @include mq(mobile,tablet) {}
//---------------------------------------------------------

@mixin mq(
  $from: false,
  $until: false
) {
  $query : false;
  $min : false;
  $max : false;
  @if $from {
    $fromUnit : grid($from);
    $min : "(min-width:#{$fromUnit})";
    $query : $min;
  }
  @if $until {
    $untilUnit : grid($until)-0.1;
    $max : "(max-width:#{$untilUnit})";
    $query : $max;
  }
  @if $min and $max {
    $query : "(min-width:#{$fromUnit}) and (max-width:#{$untilUnit})";
  }
  @media #{$query} {
    @content;
  }
}

//---------------------------------------------------------
// Clearfix Mixin
// @see http://nicolasgallagher.com/
//---------------------------------------------------------

@mixin clearfix() {
  *zoom: 1;
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

//---------------------------------------------------------
// Accessibility
// Also consider adding the aria-hidden="true" attribute
// @see https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA
//---------------------------------------------------------

@mixin hide-visually() {
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: circle(1% at 1% 1%);
  height: 1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

//---------------------------------------------------------
// Generate vendor prefixes
// @see https://github.com/thoughtbot/bourbon/blob/master/core/bourbon/library/_prefixer.scss
// @include prefixer(appearance, none, ("webkit", "moz"));
//---------------------------------------------------------

@mixin prefixer(
  $property,
  $value,
  $prefixes: ()
) {
  @each $prefix in $prefixes {
    #{"-" + $prefix + "-" + $property}: $value;
  }
  #{$property}: $value;
}

//---------------------------------------------------------
// Vendor Prefixed `transform` Mixin
// @param string $property Property value to transform
//---------------------------------------------------------

@mixin transform($property) {
  @include prefixer(transform, #{$property}, ("webkit","ms"));
}
